class Solution {
    public int minEatingSpeed(int[] piles, int h) {
       int start = 1;
       int max = -1;
       for( int i = 0; i< piles.length; i++){
          if(max <= piles[i]){
            max = piles[i];
          }
       }
       int end = max;
       int ans = max;
       while(start <= end){
         int mid = start + ((end- start)/2);
         if(day_count(piles, mid, h)){
            ans = mid;
            end = mid-1;
         }
         else{
            start = mid+1;
         }
       }
       return ans;
    }
    
    public static boolean day_count(int[] piles, int mid , int h ){
        long day_count = 0;
        for(int i = 0; i < piles.length; i++){
            long x= ((piles[i]+mid-1)/mid);
            day_count = (day_count + x);
        }
        return (day_count<=h);
    }
}
